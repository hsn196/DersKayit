/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hasan.derskayit.view;

import com.hasan.derskayit.entity.ClassRoom;
import com.hasan.derskayit.entity.FacultyMember;
import com.hasan.derskayit.entity.FacultyMemberLectures;
import com.hasan.derskayit.entity.Lecture;
import com.hasan.derskayit.entity.Student;
import com.hasan.derskayit.service.ClassRoomService;
import com.hasan.derskayit.service.FacultyMemberLecturesService;
import com.hasan.derskayit.service.FacultyMemberService;
import com.hasan.derskayit.service.LectureService;
import com.hasan.derskayit.service.StudentService;
import com.hasan.derskayit.util.DefaultComboModel;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hasan
 */
public class frmFacultyMemberLectures extends javax.swing.JFrame {

    /**
     * Creates new form frmFacultyMemberLectures
     */
    public frmFacultyMemberLectures() {
        initComponents();
        cmbDoldur();
        tableDoldur();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cmbDers = new javax.swing.JComboBox<>();
        cmbHoca = new javax.swing.JComboBox<>();
        cmbSinif = new javax.swing.JComboBox<>();
        txtId = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHocaDersleri = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Id");

        jLabel2.setText("Ders Adı");

        jLabel3.setText("Hoca Adı");

        jLabel4.setText("Sınıf");

        cmbDers.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbHoca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbSinif.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtId.setEditable(false);

        jButton1.setText("Kaydet");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Yeni");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Sil");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        tblHocaDersleri.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHocaDersleri.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHocaDersleriMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblHocaDersleri);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmbDers, 0, 141, Short.MAX_VALUE)
                                    .addComponent(cmbHoca, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbSinif, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtId)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbDers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbHoca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbSinif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        FacultyMemberLectures fml = new FacultyMemberLectures();
        DefaultComboModel secilenDers = (DefaultComboModel) cmbDers.getSelectedItem();
        Lecture l = new LectureService().getById(secilenDers.getValue());
        DefaultComboModel secilenHoca = (DefaultComboModel) cmbHoca.getSelectedItem();
        FacultyMember fm = new FacultyMemberService().getById(secilenHoca.getValue());
        DefaultComboModel secilenSinif = (DefaultComboModel) cmbSinif.getSelectedItem();
        ClassRoom cr = new ClassRoomService().getById(secilenSinif.getValue());
        fml.setCreated_at(new Date());
        fml.setLectureCode(l);
        fml.setFacultyMemberCode(fm);
        fml.setClassRoom(cr);

        if (txtId.getText().trim().equals("")) {

            new FacultyMemberLecturesService().save(fml);
        } else {
            fml.setId(Long.parseLong(txtId.getText().trim()));

            new FacultyMemberLecturesService().update(fml);
        }
        tableDoldur();
        ekranTemizle();

        JOptionPane.showMessageDialog(this, "Başarıyla Eklendi.");

    }//GEN-LAST:event_jButton1ActionPerformed

    private void tblHocaDersleriMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHocaDersleriMouseClicked

        if (tblHocaDersleri.getSelectedRow() != -1) {
            Long secilenId = Long.parseLong(tblHocaDersleri.getModel().getValueAt(tblHocaDersleri.getSelectedRow(), 0).toString());
            FacultyMemberLecturesService hocaDersleriService = new FacultyMemberLecturesService();
            FacultyMemberLectures fml = hocaDersleriService.getById(secilenId);
            txtId.setText(fml.getId().toString());
            List<Lecture> dersListe = new LectureService().getAll();
            if (fml.getLectureCode() != null) {
                for (int i = 0; i < dersListe.size(); i++) {
                    if (dersListe.get(i).getId().equals(fml.getLectureCode().getId())) {
                        cmbDers.setSelectedIndex(i);
                    }
                }
            }
            List<ClassRoom> sinifListe = new ClassRoomService().getAll();
            if (fml.getClassRoom() != null) {
                for (int i = 0; i < sinifListe.size(); i++) {
                    if (sinifListe.get(i).getId().equals(fml.getClassRoom().getId())) {
                        cmbSinif.setSelectedIndex(i);
                    }
                }
            }
            List<FacultyMember> hocaListe = new FacultyMemberService().getAll();
            if (fml.getFacultyMemberCode() != null) {
                for (int i = 0; i < hocaListe.size(); i++) {
                    if (hocaListe.get(i).getId().equals(fml.getFacultyMemberCode().getId())) {
                        cmbHoca.setSelectedIndex(i);
                    }
                }
            }
        }
     }//GEN-LAST:event_tblHocaDersleriMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        ekranTemizle();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        if (!txtId.getText().equals("")) {
            Long id = Long.valueOf(txtId.getText());
            FacultyMemberLectures fml = new FacultyMemberLectures();
            fml.setId(id);           
            new FacultyMemberLecturesService().delete(fml);
            JOptionPane.showMessageDialog(this, "Kayıt Başarıyla Silindi.");
            ekranTemizle();
            tableDoldur();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmFacultyMemberLectures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmFacultyMemberLectures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmFacultyMemberLectures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmFacultyMemberLectures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmFacultyMemberLectures().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbDers;
    private javax.swing.JComboBox<String> cmbHoca;
    private javax.swing.JComboBox<String> cmbSinif;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblHocaDersleri;
    private javax.swing.JTextField txtId;
    // End of variables declaration//GEN-END:variables

    private void cmbDoldur() {
        List<Lecture> dersListe = new LectureService().getAll();
        DefaultComboModel[] dizi = null;
        if (dersListe != null) {
            dizi = new DefaultComboModel[dersListe.size()];
            for (int i = 0; i < dersListe.size(); i++) {
                Lecture o = dersListe.get(i);
                dizi[i] = new DefaultComboModel(o.getId(), o.getName());
            }
        }
        cmbDers.setModel(new DefaultComboBoxModel(dizi));

        List<FacultyMember> hocaListe = new FacultyMemberService().getAll();
        DefaultComboModel[] dizi1 = null;
        if (hocaListe != null) {
            dizi1 = new DefaultComboModel[hocaListe.size()];
            for (int i = 0; i < dersListe.size(); i++) {
                FacultyMember f = hocaListe.get(i);
                dizi1[i] = new DefaultComboModel(f.getId(), f.getName());
            }
        }
        cmbHoca.setModel(new DefaultComboBoxModel(dizi1));

        List<ClassRoom> sinifListe = new ClassRoomService().getAll();
        DefaultComboModel[] dizi2 = null;
        if (sinifListe != null) {
            dizi2 = new DefaultComboModel[sinifListe.size()];
            for (int i = 0; i < sinifListe.size(); i++) {
                ClassRoom c = sinifListe.get(i);
                dizi2[i] = new DefaultComboModel(c.getId(), c.getName());
            }
        }
        cmbSinif.setModel(new DefaultComboBoxModel(dizi2));
    }

    private void tableDoldur() {
        List<FacultyMemberLectures> fm = new FacultyMemberLecturesService().getAll();
        String[] columnNames = new String[5];
        columnNames[0] = "Id";
        columnNames[1] = "Hoca";
        columnNames[2] = "Ders";
        columnNames[3] = "Sınıf";
        columnNames[4] = "Oluş. Tar.";
        String[][] data = new String[fm.size()][5];
        for (int i = 0; i < fm.size(); i++) {
            FacultyMemberLectures st = fm.get(i);
            data[i][0] = st.getId().toString();
            data[i][1] = st.getFacultyMemberCode().getName() + " " + st.getFacultyMemberCode().getSurname();
            data[i][2] = st.getLectureCode().getName();
            data[i][3] = st.getClassRoom().getName();
            data[i][4] = st.getCreated_at().toLocaleString();
        }
        tblHocaDersleri.setModel(new DefaultTableModel(data, columnNames));
    }

    private void ekranTemizle() {
        cmbDers.setSelectedItem(null);
        cmbHoca.setSelectedItem(null);
        cmbSinif.setSelectedItem(null);
        txtId.setText("");
    }
}
